{
    "docs": [
        {
            "location": "/", 
            "text": "What is ContinuousPHP\n\n\nContinuousPHP is the first and only PHP-centric PaaS to build, package, test and deploy applications in the same workflow.\n\n\nThe ContinuousPHP CLI is a command line interface for the ContinuousPHP Platform.\n\n\nInstallation\n\n\nWe recommend using the php installer script to install the latest version\nof continuousphp PHAR.\n\n\n$ curl -LSs https://continuousphp.github.io/cli/phar-installer.php | php\n# Move the phar in your user bin directory\n$ mv continuousphp.phar /usr/local/bin/continuousphp\n\n\n\nThe command will check your PHP settings, warn you of any issues, and then download it to the current directory.\nFrom there, you may place it anywhere you want to make it easier to access (such as \n/usr/local/bin\n) and chmod it to 755.\nYou can even rename it to just \ncontinuousphp\n to avoid having to type the .phar extension every time.\n\n\nConfiguration\n\n\nBy default, some of the continuousphp API requests do not require to be authenticated.\nBut you will certainly need to authenticate for commands that require permissions, like starting or stopping a build.\n\n\nThe cli implements a profile system to easily use different continuousphp accounts.\n\n\nEach profile must be configured with the continuousphp user token. You can find a personal token\non your credentials page at https://app.continuousphp.com/credentials\n\n\nConfigure a new profile in interactive mode with this command:\n\n\n$ continuousphp configure\n \n Profile name [default]: myProfileName\n \n User Token: XXXXXXXXXX\n \n Profile myUserAccount saved in /home/user/.continuousphp/credentials\n\n\n\nIf you choose \ndefault\n as the profile name, the continuousphp command will automatically use this credential.\nOtherwise, you must specify the option \n--profile myProfileName\n on each command.", 
            "title": "What is ContinuousPHP"
        }, 
        {
            "location": "/#what-is-continuousphp", 
            "text": "ContinuousPHP is the first and only PHP-centric PaaS to build, package, test and deploy applications in the same workflow.  The ContinuousPHP CLI is a command line interface for the ContinuousPHP Platform.", 
            "title": "What is ContinuousPHP"
        }, 
        {
            "location": "/#installation", 
            "text": "We recommend using the php installer script to install the latest version\nof continuousphp PHAR.  $ curl -LSs https://continuousphp.github.io/cli/phar-installer.php | php\n# Move the phar in your user bin directory\n$ mv continuousphp.phar /usr/local/bin/continuousphp  The command will check your PHP settings, warn you of any issues, and then download it to the current directory.\nFrom there, you may place it anywhere you want to make it easier to access (such as  /usr/local/bin ) and chmod it to 755.\nYou can even rename it to just  continuousphp  to avoid having to type the .phar extension every time.", 
            "title": "Installation"
        }, 
        {
            "location": "/#configuration", 
            "text": "By default, some of the continuousphp API requests do not require to be authenticated.\nBut you will certainly need to authenticate for commands that require permissions, like starting or stopping a build.  The cli implements a profile system to easily use different continuousphp accounts.  Each profile must be configured with the continuousphp user token. You can find a personal token\non your credentials page at https://app.continuousphp.com/credentials  Configure a new profile in interactive mode with this command:  $ continuousphp configure\n   Profile name [default]: myProfileName\n   User Token: XXXXXXXXXX\n   Profile myUserAccount saved in /home/user/.continuousphp/credentials  If you choose  default  as the profile name, the continuousphp command will automatically use this credential.\nOtherwise, you must specify the option  --profile myProfileName  on each command.", 
            "title": "Configuration"
        }
    ]
}